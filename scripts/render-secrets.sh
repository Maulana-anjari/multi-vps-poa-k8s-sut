#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(cd "${SCRIPT_DIR}/.." && pwd)"
CONFIG_DIR="${ROOT_DIR}/config"
ARTIFACTS_DIR="${ROOT_DIR}/artifacts"
OUTPUT_FILE="${ROOT_DIR}/manifests/shared/secrets.generated.yaml"
GLOBAL_ENV="${ROOT_DIR}/global.env"

if [[ ! -f "${GLOBAL_ENV}" ]]; then
  echo "File global.env tidak ditemukan; silakan salin dari global.env.example." >&2
  exit 1
fi

set -a
# shellcheck source=/dev/null
source "${GLOBAL_ENV}"
set +a

K8S_NAMESPACE="${K8S_NAMESPACE:-poa-mainnet}"

if [[ ! -d "${CONFIG_DIR}/passwords" ]]; then
  echo "Direktori ${CONFIG_DIR}/passwords tidak ditemukan. Jalankan prepare-artifacts.sh lebih dulu." >&2
  exit 1
fi

mkdir -p "$(dirname "${OUTPUT_FILE}")"

signer_names=(UGM ITB UI UB ITS)

base64_compact() {
  if base64 --help 2>&1 | grep -q -- '-w'; then
    base64 -w0 "$1"
  else
    base64 "$1" | tr -d '\n'
  fi
}

{
  printf "# Generated by scripts/render-secrets.sh on %s\n" "$(date -Iseconds)"
  cat <<EOF
apiVersion: v1
kind: Secret
metadata:
  name: poa-geth-passwords
  namespace: ${K8S_NAMESPACE}
type: Opaque
data:
EOF
  for name in "${signer_names[@]}"; do
    pass_file="${CONFIG_DIR}/passwords/${name}.pass"
    if [[ -f "${pass_file}" ]]; then
      printf "  %s.pass: %s\n" "${name}" "$(base64_compact "${pass_file}")"
    fi
  done

} > "${OUTPUT_FILE}"

echo "Secret Kubernetes tersimpan di ${OUTPUT_FILE}"
